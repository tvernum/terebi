<!-- vim: set ft=ant ts=2 sts=2 expandtab shiftwidth=2  : -->
<project name="terebi.lpc"  default="all" basedir="."  xmlns:ivy="antlib:org.apache.ivy.ant" >

<!-- <property name="javacc.home" value="/Users/tim/Development/Libraries/javacc/javacc-4.2/"/> -->
  <property name="javacc.home" value="/home/tim/development/tools/javacc-javacc-7.0.13"/>

  <property name="output"         location="output/ant"         />
  <property name="output.java"    location="output/ant/java"    />
  <property name="output.classes" location="output/ant/classes" />
  <property name="output.junit"   location="output/ant/junit"   />
  <property name="output.dist"    location="output/ant/dist"   />

  <property name="java.parser.package" value="us/terebi/lang/lpc/parser" />

  <target name="all"   description="Builds LPC parser/compiler + runs tests" depends="build, test, dist" />
  <target name="build" description="Builds LPC parser/compiler" depends="libs, grammar, compile " />

  <target name="grammar" depends="jjtree,javacc" />

  <import file="source/build/install-ivy.xml" />

  <property name="libs.stout.dir" value="lib/compiler/" />
  <property name="libs.stout.jar" value="${libs.stout.dir}/org.adjective.stout.jar" />
  <target name="libs.stout" depends="libs.stout.available,libs.stout.download" />
  <target name="libs.stout.available">
    <available property="libs.stout.available" file="${libs.stout.jar}" />
  </target> 
  <target name="libs.stout.download" unless="libs.stout.available">
    <mkdir dir="${libs.stout.dir}" />
    <get src="https://github.com/tvernum/stout/releases/download/v0.2.2/org.adjective.stout.jar" dest="${libs.stout.jar}" usetimestamp="true" />
  </target> 

  <target name="libs" depends="init-ivy,libs.stout" >
    <ivy:resolve file="source/build/ivy.xml" type="jar" />
    <ivy:retrieve type="jar" pattern="${ivy.lib.dir}/[conf]/[artifact]-[revision].[ext]"  />
  </target>

  <target name="jjtree" >
    <mkdir dir="${output}/grammar" />
    <mkdir dir="${output.java}/${java.parser.package}/ast" />
    <jjtree 
        target="source/grammar/lpc.jjt"
        outputfile="../../../../../../../grammar/Parser.jj"
        outputdirectory="${output.java}/${java.parser.package}/ast" 
        javacchome="${javacc.home}" />
  </target>

  <target name="javacc" >
    <mkdir dir="${output.java}/${java.parser.package}/jj" />

    <javacc
        target="${output}/grammar/Parser.jj" 
        outputdirectory="${output.java}/${java.parser.package}/jj" 
        javacchome="${javacc.home}" />
  </target>

  <target name="compile" depends="libs">
    <mkdir dir="${output.classes}" />

    <javac 
        deprecation="false" 
        debug="true" 
        destdir="${output.classes}">

        <src path="${output.java}" /> 
        <src path="source/java/parser" /> 
        <src path="source/java/preprocessor" /> 
        <src path="source/java/runtime" /> 
        <src path="source/java/compiler" /> 
        <src path="source/java/test" /> 

        <classpath>
            <fileset dir="lib" />
        </classpath>
    </javac>
  </target>

  <target name="test">
    <mkdir dir="${output.junit}" />
    <junit fork="yes" forkmode="once"  dir="${basedir}" haltonerror="false" failureproperty="junit.failure" errorproperty="junit.error" >
      <classpath>
        <fileset dir="lib" />
        <pathelement location="${output.classes}" />
        <pathelement location="source/resource/test" />
        <pathelement location="source/resource/server" />
      </classpath>
      <batchtest todir="${output.junit}">
        <fileset dir="source/java/test">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
      <formatter type="xml" />
      <formatter type="plain" />
    </junit>
    <fail if="junit.failure" />
    <fail if="junit.error" />
  </target>

  <target name="dist.jar" depends="grammar,compile">
    <tstamp prefix="tstamp" >
      <format property="date" pattern="yyyy-MM-dd" locale="en,AU"/>
      <format property="time" pattern="HH:mm"      locale="en,AU"/>
    </tstamp>
    <exec executable="hg" outputproperty="hg.version" >
      <arg value="id" />
      <arg value="-i" />
    </exec>
    <mkdir dir="${output.dist}" />
    <jar destfile="${output.dist}/${ant.project.name}.jar">
      <manifest>
        <attribute name="Implementation-Vendor"   value="Terebi"/>
        <attribute name="Implementation-Title"    value="Terebi LPC Compiler"/>
        <attribute name="Implementation-URL"      value="http://www.terebi.us/"/>
        <!-- <attribute name="Implementation-Version" value="1.0.0beta2"/> -->
        <attribute name="Implementation-Revision" value="${hg.version}"/>
        <attribute name="Built-Date"              value="${tstamp.date} ${tstamp.time}"/>
      </manifest>
      <fileset dir="${output.classes}" />
      <fileset dir="source/resource/server/" />
    </jar>
  </target>

  <target name="dist.source" >
    <zip destfile="${output.dist}/${ant.project.name}-source.zip">
      <fileset dir="." includes="source/java/**" />
      <fileset dir="." includes="source/grammar/**" />
    </zip>
  </target>

  <target name="dist" depends="dist.jar, dist.source" />

  <target name="clean">
    <delete dir="${output}" />
  </target>

</project>
